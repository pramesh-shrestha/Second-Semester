<?xml version="1.0" encoding="UTF-8" standalone="no"?><domain application-root="${com.sun.aas.instanceRoot}/applications" log-root="${com.sun.aas.instanceRoot}/logs" version="10.0">
  <system-applications/>
  <applications/>
  <resources>
    <jdbc-resource jndi-name="jdbc/__TimerPool" object-type="system-admin" pool-name="__TimerPool"/>
    <jdbc-resource jndi-name="jdbc/__default" pool-name="DerbyPool"/>
    <jdbc-connection-pool datasource-classname="org.apache.derby.jdbc.EmbeddedXADataSource" name="__TimerPool" res-type="javax.sql.XADataSource">
      <property name="databaseName" value="${com.sun.aas.instanceRoot}/lib/databases/ejbtimer"/>
      <property name="connectionAttributes" value=";create=true"/>
    </jdbc-connection-pool>
    <jdbc-connection-pool datasource-classname="org.apache.derby.jdbc.ClientDataSource" is-isolation-level-guaranteed="false" name="DerbyPool" res-type="javax.sql.DataSource">
      <property name="PortNumber" value="1527"/>
      <property name="Password" value="APP"/>
      <property name="User" value="APP"/>
      <property name="serverName" value="localhost"/>
      <property name="DatabaseName" value="sun-appserv-samples"/>
      <property name="connectionAttributes" value=";create=true"/>
    </jdbc-connection-pool>
  </resources>
  <servers>
    <server config-ref="server-config" name="server"> 
      <resource-ref ref="jdbc/__TimerPool"/>
      <resource-ref ref="jdbc/__default"/>
    </server>
  </servers>
 <configs>
   <config name="server-config">
     <http-service> 
        <access-log rotation-interval-in-minutes="15" rotation-suffix="yyyy-MM-dd"/>
        <http-listener address="0.0.0.0" default-virtual-server="server" id="http-listener-1" port="8083" server-name="">
        </http-listener>
        <http-listener address="0.0.0.0" default-virtual-server="server" enabled="false" id="http-listener-2" port="8181" security-enabled="true" server-name="">
          <ssl cert-nickname="s1as" ssl3-enabled="false"/>
        </http-listener>
        <http-listener address="0.0.0.0" default-virtual-server="__asadmin" id="admin-listener" port="4850" server-name="">
        </http-listener>
        <virtual-server http-listeners="http-listener-1,http-listener-2" id="server">
          <property name="docroot" value="${com.sun.aas.instanceRoot}/docroot"/>
          <property name="accesslog" value="${com.sun.aas.instanceRoot}/logs/access"/>
          <property name="sso-enabled" value="false"/>
        </virtual-server>
        <virtual-server http-listeners="admin-listener" id="__asadmin">
          <property name="docroot" value="${com.sun.aas.instanceRoot}/docroot"/>
          <property name="accesslog" value="${com.sun.aas.instanceRoot}/logs/access"/>
          <property name="sso-enabled" value="false"/>
        </virtual-server>
        <request-processing header-buffer-length-in-bytes="8192" initial-thread-count="2" thread-count="20" thread-increment="1"/>
        <keep-alive max-connections="250"/>
        <connection-pool/>
        <http-protocol default-response-type="text/plain; charset=iso-8859-1" forced-response-type="text/plain; charset=iso-8859-1"/>
        <http-file-cache file-caching-enabled="false" globally-enabled="false"/>
        <property name="accessLoggingEnabled" value="false"/>
      </http-service>
      <iiop-service>
        <orb use-thread-pool-ids="thread-pool-1"/>
        <iiop-listener address="0.0.0.0" id="orb-listener-1" port="3700"/>
        <iiop-listener address="0.0.0.0" id="SSL" port="3820" security-enabled="true">
          <ssl cert-nickname="s1as"/>
        </iiop-listener>
        <iiop-listener address="0.0.0.0" id="SSL_MUTUALAUTH" port="3920" security-enabled="true">
          <ssl cert-nickname="s1as" client-auth-enabled="true"/>
        </iiop-listener>
      </iiop-service>
      <admin-service system-jmx-connector-name="system" type="das-and-server">
        <jmx-connector address="0.0.0.0" auth-realm-name="admin-realm" name="system" port="8686" security-enabled="false"/>
        <das-config autodeploy-dir="${com.sun.aas.instanceRoot}/autodeploy" autodeploy-enabled="true" deploy-xml-validation="full" dynamic-reload-enabled="true"/>
        <property name="adminConsoleContextRoot" value="/admin"/>
        <property name="adminConsoleDownloadLocation" value="glassfish/lib/install/applications/admingui.war"/>
        <property name="ipsRoot" value="${com.sun.aas.installRoot}/.."/>
      </admin-service>
      <web-container>
        <session-config>
          <session-manager>
            <manager-properties/>
            <store-properties/>
          </session-manager>
          <session-properties/>
        </session-config>
      </web-container>
      <ejb-container max-pool-size="32" pool-resize-quantity="8" session-store="${com.sun.aas.instanceRoot}/session-store" steady-pool-size="0">
        <ejb-timer-service/>
      </ejb-container>
      <mdb-container max-pool-size="32" pool-resize-quantity="8" steady-pool-size="0">
      </mdb-container>
      <jms-service default-jms-host="default_JMS_host" type="EMBEDDED">
        <jms-host admin-password="admin" admin-user-name="admin" host="/net/repine.sfbay.sun.com/export1/hudson3/gf-branch-build/workspace/glassfish-3.0-Prelude/distributions-prelude/glassfish/target/local_image/glassfish/glassfishv3-prelude/glassfish" name="default_JMS_host" port="7676"/>
      </jms-service>
      <log-service file="${com.sun.aas.instanceRoot}/logs/server.log" log-rotation-limit-in-bytes="2000000">
        <module-log-levels/>
      </log-service>
      <security-service>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="admin-realm">
          <property name="file" value="${com.sun.aas.instanceRoot}/config/admin-keyfile"/>
          <property name="jaas-context" value="fileRealm"/>
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.file.FileRealm" name="file">
          <property name="file" value="${com.sun.aas.instanceRoot}/config/keyfile"/>
          <property name="jaas-context" value="fileRealm"/>
        </auth-realm>
        <auth-realm classname="com.sun.enterprise.security.auth.realm.certificate.CertificateRealm" name="certificate"/>
        <jacc-provider name="default" policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl" policy-provider="com.sun.enterprise.security.provider.PolicyWrapper">
          <property name="repository" value="${com.sun.aas.instanceRoot}/generated/policy"/>
        </jacc-provider>
        <jacc-provider name="simple" policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory" policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider"/>
        <audit-module classname="com.sun.enterprise.security.Audit" name="default">
          <property name="auditOn" value="false"/>
        </audit-module>
        <message-security-config auth-layer="SOAP">
          <provider-config class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule" provider-id="XWS_ClientProvider" provider-type="client">
            <request-policy auth-source="content"/>
            <response-policy auth-source="content"/>
            <property name="encryption.key.alias" value="s1as"/>
            <property name="signature.key.alias" value="s1as"/>
            <property name="dynamic.username.password" value="false"/>
            <property name="debug" value="false"/>
          </provider-config>
          <provider-config class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule" provider-id="ClientProvider" provider-type="client">
            <request-policy auth-source="content"/>
            <response-policy auth-source="content"/>
            <property name="encryption.key.alias" value="s1as"/>
            <property name="signature.key.alias" value="s1as"/>
            <property name="dynamic.username.password" value="false"/>
            <property name="debug" value="false"/>
            <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"/>
          </provider-config>
          <provider-config class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule" provider-id="XWS_ServerProvider" provider-type="server">
            <request-policy auth-source="content"/>
            <response-policy auth-source="content"/>
            <property name="encryption.key.alias" value="s1as"/>
            <property name="signature.key.alias" value="s1as"/>
            <property name="debug" value="false"/>
          </provider-config>
          <provider-config class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule" provider-id="ServerProvider" provider-type="server">
            <request-policy auth-source="content"/>
            <response-policy auth-source="content"/>
            <property name="encryption.key.alias" value="s1as"/>
            <property name="signature.key.alias" value="s1as"/>
            <property name="debug" value="false"/>
            <property name="security.config" value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"/>
          </provider-config>
        </message-security-config>
      </security-service>
      <transaction-service tx-log-dir="${com.sun.aas.instanceRoot}/logs">
      </transaction-service>
      <monitoring-service>
        <module-monitoring-levels/>
      </monitoring-service>
      <java-config classpath-suffix="" debug-options="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=9009" system-classpath="">
        <jvm-options>-client</jvm-options>
        <jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
        <jvm-options>-XX:+LogVMOutput</jvm-options>
        <jvm-options>-XX:LogFile=${com.sun.aas.instanceRoot}/logs/jvm.log</jvm-options>
        <jvm-options>-Djava.endorsed.dirs=${com.sun.aas.installRoot}/lib/endorsed</jvm-options>
        <jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy</jvm-options>
        <jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf</jvm-options>
        <jvm-options>-Xmx512m</jvm-options>
        <jvm-options>-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/keystore.jks</jvm-options>
        <jvm-options>-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks</jvm-options>
        <jvm-options>-Djava.ext.dirs=${com.sun.aas.javaRoot}/lib/ext${path.separator}${com.sun.aas.javaRoot}/jre/lib/ext${path.separator}${com.sun.aas.instanceRoot}/lib/ext${path.separator}${com.sun.aas.derbyRoot}/lib</jvm-options>
        <jvm-options>-Djdbc.drivers=org.apache.derby.jdbc.ClientDriver</jvm-options>
        <jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory</jvm-options>
        <jvm-options>-XX:NewRatio=2</jvm-options>
      </java-config>
      <thread-pools>
        <thread-pool thread-pool-id="thread-pool-1"/>
      </thread-pools>
    </config> 
  </configs>
  <property name="administrative.domain.name" value="domain1"/>
</domain>